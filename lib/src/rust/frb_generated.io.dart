// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.32.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

import 'api/roon_browse_mirror.dart';
import 'api/roon_transport_mirror.dart';
import 'api/simple.dart';
import 'dart:async';
import 'dart:convert';
import 'dart:ffi' as ffi;
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_io.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  @protected
  FutureOr<void> Function(RoonEvent)
      dco_decode_DartFn_Inputs_roon_event_Output_unit(dynamic raw);

  @protected
  Object dco_decode_DartOpaque(dynamic raw);

  @protected
  Map<String, String> dco_decode_Map_String_String(dynamic raw);

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  bool dco_decode_bool(dynamic raw);

  @protected
  bool dco_decode_box_autoadd_bool(dynamic raw);

  @protected
  BrowseItem dco_decode_box_autoadd_browse_item(dynamic raw);

  @protected
  BrowseItemHint dco_decode_box_autoadd_browse_item_hint(dynamic raw);

  @protected
  BrowseItems dco_decode_box_autoadd_browse_items(dynamic raw);

  @protected
  BrowseListHint dco_decode_box_autoadd_browse_list_hint(dynamic raw);

  @protected
  double dco_decode_box_autoadd_f_32(dynamic raw);

  @protected
  int dco_decode_box_autoadd_i_64(dynamic raw);

  @protected
  ImageKeyValue dco_decode_box_autoadd_image_key_value(dynamic raw);

  @protected
  InputPrompt dco_decode_box_autoadd_input_prompt(dynamic raw);

  @protected
  NowPlaying dco_decode_box_autoadd_now_playing(dynamic raw);

  @protected
  int dco_decode_box_autoadd_u_32(dynamic raw);

  @protected
  int dco_decode_box_autoadd_usize(dynamic raw);

  @protected
  Volume dco_decode_box_autoadd_volume(dynamic raw);

  @protected
  Zone dco_decode_box_autoadd_zone(dynamic raw);

  @protected
  ZoneSeek dco_decode_box_autoadd_zone_seek(dynamic raw);

  @protected
  BrowseItem dco_decode_browse_item(dynamic raw);

  @protected
  BrowseItemHint dco_decode_browse_item_hint(dynamic raw);

  @protected
  BrowseItems dco_decode_browse_items(dynamic raw);

  @protected
  BrowseList dco_decode_browse_list(dynamic raw);

  @protected
  BrowseListHint dco_decode_browse_list_hint(dynamic raw);

  @protected
  ChangeMode dco_decode_change_mode(dynamic raw);

  @protected
  Control dco_decode_control(dynamic raw);

  @protected
  double dco_decode_f_32(dynamic raw);

  @protected
  int dco_decode_i_32(dynamic raw);

  @protected
  int dco_decode_i_64(dynamic raw);

  @protected
  ImageKeyValue dco_decode_image_key_value(dynamic raw);

  @protected
  InputPrompt dco_decode_input_prompt(dynamic raw);

  @protected
  List<String> dco_decode_list_String(dynamic raw);

  @protected
  List<BrowseItem> dco_decode_list_browse_item(dynamic raw);

  @protected
  List<Output> dco_decode_list_output(dynamic raw);

  @protected
  List<int> dco_decode_list_prim_u_32_loose(dynamic raw);

  @protected
  Uint32List dco_decode_list_prim_u_32_strict(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  List<QueueItem> dco_decode_list_queue_item(dynamic raw);

  @protected
  List<(String, String)> dco_decode_list_record_string_string(dynamic raw);

  @protected
  List<SourceControls> dco_decode_list_source_controls(dynamic raw);

  @protected
  List<ZoneSummary> dco_decode_list_zone_summary(dynamic raw);

  @protected
  Mute dco_decode_mute(dynamic raw);

  @protected
  NowPlaying dco_decode_now_playing(dynamic raw);

  @protected
  OneLine dco_decode_one_line(dynamic raw);

  @protected
  String? dco_decode_opt_String(dynamic raw);

  @protected
  bool? dco_decode_opt_box_autoadd_bool(dynamic raw);

  @protected
  BrowseItemHint? dco_decode_opt_box_autoadd_browse_item_hint(dynamic raw);

  @protected
  BrowseListHint? dco_decode_opt_box_autoadd_browse_list_hint(dynamic raw);

  @protected
  double? dco_decode_opt_box_autoadd_f_32(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_i_64(dynamic raw);

  @protected
  InputPrompt? dco_decode_opt_box_autoadd_input_prompt(dynamic raw);

  @protected
  NowPlaying? dco_decode_opt_box_autoadd_now_playing(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_u_32(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_usize(dynamic raw);

  @protected
  Volume? dco_decode_opt_box_autoadd_volume(dynamic raw);

  @protected
  Zone? dco_decode_opt_box_autoadd_zone(dynamic raw);

  @protected
  List<String>? dco_decode_opt_list_String(dynamic raw);

  @protected
  List<SourceControls>? dco_decode_opt_list_source_controls(dynamic raw);

  @protected
  Output dco_decode_output(dynamic raw);

  @protected
  PlayState dco_decode_play_state(dynamic raw);

  @protected
  QueueItem dco_decode_queue_item(dynamic raw);

  @protected
  (String, String) dco_decode_record_string_string(dynamic raw);

  @protected
  Repeat dco_decode_repeat(dynamic raw);

  @protected
  RoonEvent dco_decode_roon_event(dynamic raw);

  @protected
  Scale dco_decode_scale(dynamic raw);

  @protected
  SourceControls dco_decode_source_controls(dynamic raw);

  @protected
  Status dco_decode_status(dynamic raw);

  @protected
  ThreeLine dco_decode_three_line(dynamic raw);

  @protected
  TwoLine dco_decode_two_line(dynamic raw);

  @protected
  int dco_decode_u_32(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  int dco_decode_usize(dynamic raw);

  @protected
  Volume dco_decode_volume(dynamic raw);

  @protected
  Zone dco_decode_zone(dynamic raw);

  @protected
  ZoneSeek dco_decode_zone_seek(dynamic raw);

  @protected
  ZoneSettings dco_decode_zone_settings(dynamic raw);

  @protected
  ZoneSummary dco_decode_zone_summary(dynamic raw);

  @protected
  Object sse_decode_DartOpaque(SseDeserializer deserializer);

  @protected
  Map<String, String> sse_decode_Map_String_String(
      SseDeserializer deserializer);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  bool sse_decode_box_autoadd_bool(SseDeserializer deserializer);

  @protected
  BrowseItem sse_decode_box_autoadd_browse_item(SseDeserializer deserializer);

  @protected
  BrowseItemHint sse_decode_box_autoadd_browse_item_hint(
      SseDeserializer deserializer);

  @protected
  BrowseItems sse_decode_box_autoadd_browse_items(SseDeserializer deserializer);

  @protected
  BrowseListHint sse_decode_box_autoadd_browse_list_hint(
      SseDeserializer deserializer);

  @protected
  double sse_decode_box_autoadd_f_32(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_i_64(SseDeserializer deserializer);

  @protected
  ImageKeyValue sse_decode_box_autoadd_image_key_value(
      SseDeserializer deserializer);

  @protected
  InputPrompt sse_decode_box_autoadd_input_prompt(SseDeserializer deserializer);

  @protected
  NowPlaying sse_decode_box_autoadd_now_playing(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_u_32(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_usize(SseDeserializer deserializer);

  @protected
  Volume sse_decode_box_autoadd_volume(SseDeserializer deserializer);

  @protected
  Zone sse_decode_box_autoadd_zone(SseDeserializer deserializer);

  @protected
  ZoneSeek sse_decode_box_autoadd_zone_seek(SseDeserializer deserializer);

  @protected
  BrowseItem sse_decode_browse_item(SseDeserializer deserializer);

  @protected
  BrowseItemHint sse_decode_browse_item_hint(SseDeserializer deserializer);

  @protected
  BrowseItems sse_decode_browse_items(SseDeserializer deserializer);

  @protected
  BrowseList sse_decode_browse_list(SseDeserializer deserializer);

  @protected
  BrowseListHint sse_decode_browse_list_hint(SseDeserializer deserializer);

  @protected
  ChangeMode sse_decode_change_mode(SseDeserializer deserializer);

  @protected
  Control sse_decode_control(SseDeserializer deserializer);

  @protected
  double sse_decode_f_32(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  int sse_decode_i_64(SseDeserializer deserializer);

  @protected
  ImageKeyValue sse_decode_image_key_value(SseDeserializer deserializer);

  @protected
  InputPrompt sse_decode_input_prompt(SseDeserializer deserializer);

  @protected
  List<String> sse_decode_list_String(SseDeserializer deserializer);

  @protected
  List<BrowseItem> sse_decode_list_browse_item(SseDeserializer deserializer);

  @protected
  List<Output> sse_decode_list_output(SseDeserializer deserializer);

  @protected
  List<int> sse_decode_list_prim_u_32_loose(SseDeserializer deserializer);

  @protected
  Uint32List sse_decode_list_prim_u_32_strict(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  List<QueueItem> sse_decode_list_queue_item(SseDeserializer deserializer);

  @protected
  List<(String, String)> sse_decode_list_record_string_string(
      SseDeserializer deserializer);

  @protected
  List<SourceControls> sse_decode_list_source_controls(
      SseDeserializer deserializer);

  @protected
  List<ZoneSummary> sse_decode_list_zone_summary(SseDeserializer deserializer);

  @protected
  Mute sse_decode_mute(SseDeserializer deserializer);

  @protected
  NowPlaying sse_decode_now_playing(SseDeserializer deserializer);

  @protected
  OneLine sse_decode_one_line(SseDeserializer deserializer);

  @protected
  String? sse_decode_opt_String(SseDeserializer deserializer);

  @protected
  bool? sse_decode_opt_box_autoadd_bool(SseDeserializer deserializer);

  @protected
  BrowseItemHint? sse_decode_opt_box_autoadd_browse_item_hint(
      SseDeserializer deserializer);

  @protected
  BrowseListHint? sse_decode_opt_box_autoadd_browse_list_hint(
      SseDeserializer deserializer);

  @protected
  double? sse_decode_opt_box_autoadd_f_32(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_i_64(SseDeserializer deserializer);

  @protected
  InputPrompt? sse_decode_opt_box_autoadd_input_prompt(
      SseDeserializer deserializer);

  @protected
  NowPlaying? sse_decode_opt_box_autoadd_now_playing(
      SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_u_32(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_usize(SseDeserializer deserializer);

  @protected
  Volume? sse_decode_opt_box_autoadd_volume(SseDeserializer deserializer);

  @protected
  Zone? sse_decode_opt_box_autoadd_zone(SseDeserializer deserializer);

  @protected
  List<String>? sse_decode_opt_list_String(SseDeserializer deserializer);

  @protected
  List<SourceControls>? sse_decode_opt_list_source_controls(
      SseDeserializer deserializer);

  @protected
  Output sse_decode_output(SseDeserializer deserializer);

  @protected
  PlayState sse_decode_play_state(SseDeserializer deserializer);

  @protected
  QueueItem sse_decode_queue_item(SseDeserializer deserializer);

  @protected
  (String, String) sse_decode_record_string_string(
      SseDeserializer deserializer);

  @protected
  Repeat sse_decode_repeat(SseDeserializer deserializer);

  @protected
  RoonEvent sse_decode_roon_event(SseDeserializer deserializer);

  @protected
  Scale sse_decode_scale(SseDeserializer deserializer);

  @protected
  SourceControls sse_decode_source_controls(SseDeserializer deserializer);

  @protected
  Status sse_decode_status(SseDeserializer deserializer);

  @protected
  ThreeLine sse_decode_three_line(SseDeserializer deserializer);

  @protected
  TwoLine sse_decode_two_line(SseDeserializer deserializer);

  @protected
  int sse_decode_u_32(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  int sse_decode_usize(SseDeserializer deserializer);

  @protected
  Volume sse_decode_volume(SseDeserializer deserializer);

  @protected
  Zone sse_decode_zone(SseDeserializer deserializer);

  @protected
  ZoneSeek sse_decode_zone_seek(SseDeserializer deserializer);

  @protected
  ZoneSettings sse_decode_zone_settings(SseDeserializer deserializer);

  @protected
  ZoneSummary sse_decode_zone_summary(SseDeserializer deserializer);

  @protected
  void sse_encode_DartFn_Inputs_roon_event_Output_unit(
      FutureOr<void> Function(RoonEvent) self, SseSerializer serializer);

  @protected
  void sse_encode_DartOpaque(Object self, SseSerializer serializer);

  @protected
  void sse_encode_Map_String_String(
      Map<String, String> self, SseSerializer serializer);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_browse_item(
      BrowseItem self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_browse_item_hint(
      BrowseItemHint self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_browse_items(
      BrowseItems self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_browse_list_hint(
      BrowseListHint self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_f_32(double self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_i_64(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_image_key_value(
      ImageKeyValue self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_input_prompt(
      InputPrompt self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_now_playing(
      NowPlaying self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_usize(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_volume(Volume self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_zone(Zone self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_zone_seek(
      ZoneSeek self, SseSerializer serializer);

  @protected
  void sse_encode_browse_item(BrowseItem self, SseSerializer serializer);

  @protected
  void sse_encode_browse_item_hint(
      BrowseItemHint self, SseSerializer serializer);

  @protected
  void sse_encode_browse_items(BrowseItems self, SseSerializer serializer);

  @protected
  void sse_encode_browse_list(BrowseList self, SseSerializer serializer);

  @protected
  void sse_encode_browse_list_hint(
      BrowseListHint self, SseSerializer serializer);

  @protected
  void sse_encode_change_mode(ChangeMode self, SseSerializer serializer);

  @protected
  void sse_encode_control(Control self, SseSerializer serializer);

  @protected
  void sse_encode_f_32(double self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_i_64(int self, SseSerializer serializer);

  @protected
  void sse_encode_image_key_value(ImageKeyValue self, SseSerializer serializer);

  @protected
  void sse_encode_input_prompt(InputPrompt self, SseSerializer serializer);

  @protected
  void sse_encode_list_String(List<String> self, SseSerializer serializer);

  @protected
  void sse_encode_list_browse_item(
      List<BrowseItem> self, SseSerializer serializer);

  @protected
  void sse_encode_list_output(List<Output> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_32_loose(
      List<int> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_32_strict(
      Uint32List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_strict(
      Uint8List self, SseSerializer serializer);

  @protected
  void sse_encode_list_queue_item(
      List<QueueItem> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_string(
      List<(String, String)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_source_controls(
      List<SourceControls> self, SseSerializer serializer);

  @protected
  void sse_encode_list_zone_summary(
      List<ZoneSummary> self, SseSerializer serializer);

  @protected
  void sse_encode_mute(Mute self, SseSerializer serializer);

  @protected
  void sse_encode_now_playing(NowPlaying self, SseSerializer serializer);

  @protected
  void sse_encode_one_line(OneLine self, SseSerializer serializer);

  @protected
  void sse_encode_opt_String(String? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_bool(bool? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_browse_item_hint(
      BrowseItemHint? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_browse_list_hint(
      BrowseListHint? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_f_32(double? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_i_64(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_input_prompt(
      InputPrompt? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_now_playing(
      NowPlaying? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_32(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_usize(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_volume(
      Volume? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_zone(Zone? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_String(List<String>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_source_controls(
      List<SourceControls>? self, SseSerializer serializer);

  @protected
  void sse_encode_output(Output self, SseSerializer serializer);

  @protected
  void sse_encode_play_state(PlayState self, SseSerializer serializer);

  @protected
  void sse_encode_queue_item(QueueItem self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_string(
      (String, String) self, SseSerializer serializer);

  @protected
  void sse_encode_repeat(Repeat self, SseSerializer serializer);

  @protected
  void sse_encode_roon_event(RoonEvent self, SseSerializer serializer);

  @protected
  void sse_encode_scale(Scale self, SseSerializer serializer);

  @protected
  void sse_encode_source_controls(
      SourceControls self, SseSerializer serializer);

  @protected
  void sse_encode_status(Status self, SseSerializer serializer);

  @protected
  void sse_encode_three_line(ThreeLine self, SseSerializer serializer);

  @protected
  void sse_encode_two_line(TwoLine self, SseSerializer serializer);

  @protected
  void sse_encode_u_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_usize(int self, SseSerializer serializer);

  @protected
  void sse_encode_volume(Volume self, SseSerializer serializer);

  @protected
  void sse_encode_zone(Zone self, SseSerializer serializer);

  @protected
  void sse_encode_zone_seek(ZoneSeek self, SseSerializer serializer);

  @protected
  void sse_encode_zone_settings(ZoneSettings self, SseSerializer serializer);

  @protected
  void sse_encode_zone_summary(ZoneSummary self, SseSerializer serializer);
}

// Section: wire_class

class RustLibWire implements BaseWire {
  factory RustLibWire.fromExternalLibrary(ExternalLibrary lib) =>
      RustLibWire(lib.ffiDynamicLibrary);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  RustLibWire(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;
}

// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.24.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
import 'roon_browse_wrapper.dart';
import 'roon_transport_wrapper.dart';
part 'simple.freezed.dart';

Future<void> startRoon(
        {required FutureOr<void> Function(RoonEvent) cb, dynamic hint}) =>
    RustLib.instance.api.startRoon(cb: cb, hint: hint);

Future<void> selectZone({required String zoneId, dynamic hint}) =>
    RustLib.instance.api.selectZone(zoneId: zoneId, hint: hint);

Future<void> getImage(
        {required String imageKey,
        required int width,
        required int height,
        dynamic hint}) =>
    RustLib.instance.api
        .getImage(imageKey: imageKey, width: width, height: height, hint: hint);

Future<void> selectBrowseItem({String? itemKey, dynamic hint}) =>
    RustLib.instance.api.selectBrowseItem(itemKey: itemKey, hint: hint);

class BrowseItems {
  final int offset;
  final List<BrowseItem> items;

  const BrowseItems({
    required this.offset,
    required this.items,
  });

  @override
  int get hashCode => offset.hashCode ^ items.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is BrowseItems &&
          runtimeType == other.runtimeType &&
          offset == other.offset &&
          items == other.items;
}

class ImageKeyValue {
  final String imageKey;
  final Uint8List image;

  const ImageKeyValue({
    required this.imageKey,
    required this.image,
  });

  @override
  int get hashCode => imageKey.hashCode ^ image.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ImageKeyValue &&
          runtimeType == other.runtimeType &&
          imageKey == other.imageKey &&
          image == other.image;
}

@freezed
sealed class RoonEvent with _$RoonEvent {
  const factory RoonEvent.coreFound(
    String field0,
  ) = RoonEvent_CoreFound;
  const factory RoonEvent.coreLost(
    String field0,
  ) = RoonEvent_CoreLost;
  const factory RoonEvent.zonesChanged(
    List<ZoneSummary> field0,
  ) = RoonEvent_ZonesChanged;
  const factory RoonEvent.zoneSelected(
    RoonZone field0,
  ) = RoonEvent_ZoneSelected;
  const factory RoonEvent.browseItems(
    BrowseItems field0,
  ) = RoonEvent_BrowseItems;
  const factory RoonEvent.image(
    ImageKeyValue field0,
  ) = RoonEvent_Image;
}

class ZoneSummary {
  final String zoneId;
  final String displayName;
  final ZoneState state;
  final String? nowPlaying;
  final String? imageKey;

  const ZoneSummary({
    required this.zoneId,
    required this.displayName,
    required this.state,
    this.nowPlaying,
    this.imageKey,
  });

  @override
  int get hashCode =>
      zoneId.hashCode ^
      displayName.hashCode ^
      state.hashCode ^
      nowPlaying.hashCode ^
      imageKey.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ZoneSummary &&
          runtimeType == other.runtimeType &&
          zoneId == other.zoneId &&
          displayName == other.displayName &&
          state == other.state &&
          nowPlaying == other.nowPlaying &&
          imageKey == other.imageKey;
}
